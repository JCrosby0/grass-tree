import{p as e,a as l,r as a,c as o,w as r,b as n,o as t,d as i,e as u,F as s,f as d,u as p,g as v,h as m,v as c,i as h,t as y,j as g,k,l as w,m as f,n as x}from"./vendor.4a9f97fd.js";!function(e=".",l="__import__"){try{self[l]=new Function("u","return import(u)")}catch(a){const o=new URL(e,location),r=e=>{URL.revokeObjectURL(e.src),e.remove()};self[l]=e=>new Promise(((a,n)=>{const t=new URL(e,o);if(self[l].moduleMap[t])return a(self[l].moduleMap[t]);const i=new Blob([`import * as m from '${t}';`,`${l}.moduleMap['${t}']=m;`],{type:"text/javascript"}),u=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(i),onerror(){n(new Error(`Failed to import: ${e}`)),r(u)},onload(){a(self[l].moduleMap[t]),r(u)}});document.head.appendChild(u)})),self[l].moduleMap={}}}("/grass-tree/assets/");const S=h("data-v-06869a54");e("data-v-06869a54");const $={class:"page"},F=u("h2",null,"Grass Tree Builder Test",-1),M=u("p",null,"Here's a web app to build a grass tree in scalable vector graphics (SVG). Change the inputs to build the tree trunk and spike, and then click the button to generate the fronds and flower.",-1),b={class:"container"},T={class:"controls"},R=u("h6",null,"Dimensions",-1),B={class:"left"},I={key:0,style:{"{color":"red}"}},L=u("br",null,null,-1),H={class:"color"},C=u("h6",null,"Color Theme",-1),O=u("br",null,null,-1),V=u("h6",null,"Background Shapes",-1),A={class:"display"},U=u("defs",null,[u("linearGradient",{id:"frondColorUpper",gradientTransform:"rotate(90)"},[u("stop",{offset:"5%","stop-color":"darkgreen"}),u("stop",{offset:"95%","stop-color":"green"})]),u("linearGradient",{id:"frondColorLower",gradientTransform:"rotate(90)"},[u("stop",{offset:"5%","stop-color":"green"}),u("stop",{offset:"95%","stop-color":"yellowgreen"})]),u("linearGradient",{id:"trunkColor",gradientTransform:"rotate(0)",x1:"3%",y1:"4%",x2:"3%",y2:"12%",spreadMethod:"repeat"},[u("stop",{offset:"20%","stop-color":"#333"}),u("stop",{offset:"50%","stop-color":"black"})])],-1),G=u("ellipse",{id:"mid2",class:"ellipse mid",cx:"0",cy:"0",rx:"60",ry:"60"},null,-1),Q=u("p",{class:"copy"},"Developed by Joe Crosby, Â© 2021",-1);l();const E={expose:[],setup(e){const l=[{name:"Full Colour",value:"default"},{name:"White Silhouette",value:"white"},{name:"Black Silhouette",value:"black"}],h=[{name:"Orange",value:"orange"},{name:"Grey",value:"grey"},{name:"White",value:"white"},{name:"Black",value:"black"}],x=["noFronds"],E=a({count:0,selectedColor:"default",selectedAnim:"none",selectedShape:[],selectedColors:[]}),j=a({width:{value:500,min:300,max:750,display:!1},height:{value:500,min:300,max:750,display:!1},marginBottom:{group:"position",label:"Bottom Margin",value:50,min:0,max:200,display:!0},noBranches:{group:"Trunk",label:"Number of Branches",value:2,min:1,max:2,display:!0},trunkSwayMid:{group:"Trunk",label:"Trunk Sway - Mid",value:5,min:-100,max:100,display:!0},trunkSwayTop:{group:"Trunk",label:"Trunk Sway - Top",value:-10,min:-100,max:100,display:!0},trunkHeight:{group:"Trunk",label:"Trunk Height",value:55,min:25,max:350,display:!0},trunkWidth:{group:"Trunk",label:"Trunk Width",value:40,min:1,max:100,display:!0},trunkLeftMid:{group:"Trunk - Left",label:"Trunk Sway - Mid",value:-50,min:-100,max:100,display:!0},trunkLeftTop:{group:"Trunk - Left",label:"Trunk Sway - Top",value:-50,min:-100,max:100,display:!0},trunkLeftHeight:{group:"Trunk - Left",label:"Trunk Height",value:100,min:25,max:350,display:!0},trunkRightMid:{group:"Trunk - Right",label:"Trunk Sway - Mid",value:50,min:-100,max:100,display:!0},trunkRightTop:{group:"Trunk - Right",label:"Trunk Sway - Top",value:50,min:-100,max:100,display:!0},trunkRightHeight:{group:"Trunk - Right",label:"Trunk Height",value:100,min:25,max:350,display:!0},spikeVisible:{group:"Spike & Flower",label:"Show Spike",value:0,min:0,max:1,display:!0},spikeSwayMid:{group:"Spike & Flower",label:"Spike Sway - Mid",value:-15,min:-100,max:100,display:!0},spikeSwayTop:{group:"Spike & Flower",label:"Spike Sway - Top",value:-5,min:-100,max:100,display:!0},spikeHeight:{group:"Spike & Flower",label:"Spike Height",value:250,min:50,max:350,display:!0},spikeSecondVisible:{group:"Spike & Flower 2",label:"Show Spike",value:1,min:0,max:1,display:!0},spikeSecondSwayMid:{group:"Spike & Flower 2",label:"Spike Sway - Mid",value:-15,min:-100,max:100,display:!0},spikeSecondSwayTop:{group:"Spike & Flower 2",label:"Spike Sway - Top",value:-5,min:-100,max:100,display:!0},spikeSecondHeight:{group:"Spike & Flower 2",label:"Spike Height",value:250,min:50,max:350,display:!0},flowerVisible:{group:"Spike & Flower",label:"Show Flower",value:1,min:0,max:1,display:!0},flowerStart:{group:"Spike & Flower",label:"Flower Start",value:.5,min:0,max:1,step:.05,display:!0},flowerStop:{group:"Spike & Flower",label:"Flower Stop",value:.9,min:0,max:1,step:.05,display:!0},flowerSecondVisible:{group:"Spike & Flower 2",label:"Show Flower",value:1,min:0,max:1,display:!0},flowerSecondStart:{group:"Spike & Flower 2",label:"Flower Start",value:.5,min:0,max:1,step:.05,display:!0},flowerSecondStop:{group:"Spike & Flower 2",label:"Flower Stop",value:.9,min:0,max:1,step:.05,display:!0},noFronds:{group:"Fronds",label:"Number of Fronds",value:300,min:30,max:720,display:!1},frondLength:{group:"Fronds",label:"Frond Length",value:75,min:10,max:200,display:!0},frondDroop:{group:"Fronds",label:"Frond Droop",value:15,min:0,max:50,display:!0},frondSway:{group:"Fronds",label:"Frond Sway",value:0,min:-50,max:50,display:!0},frondRandom:{group:"Fronds",label:"Frond Randomness",value:20,min:1,max:100,display:!0},showGuideCircles:{label:"DEV Show Guide Circles",value:0,min:0,max:1,display:!1}}),D=o((()=>Object.values(j).filter((e=>e.group&&1==e.display)).reduce(((e,l,a,[])=>(!e.includes(l.group)&&e.push(l.group),e)),[]))),W=o((()=>j.noBranches.value));r(W,((e,l)=>{["trunkLeftMid","trunkLeftTop","trunkLeftHeight","trunkRightMid","trunkRightTop","trunkRightHeight","spikeSecondSwayMid","spikeSecondSwayTop","spikeSecondHeight","spikeSecondVisible","flowerSecondStart","flowerSecondStop","flowerSecondVisible"].forEach((l=>j[l].display="2"==e)),j.trunkHeight.value=parseInt(j.trunkHeight.value*("2"==e?.5:2)),j.frondLength.value=parseInt(j.frondLength.value*("2"==e?.75:1.3333))}));const _=o((()=>"2"==j.noBranches.value?`translate(${ie.value} ${ue.value})`:`translate(${oe.value} ${re.value})`)),P=o((()=>"2"==j.noBranches.value?`translate(${pe.value} ${ve.value})`:`translate(${oe.value} ${re.value})`)),N=a({xInner:Array(j.noFronds.value).fill(0),yInner:Array(j.noFronds.value).fill(0),xMid:Array(j.noFronds.value).fill(0),yMid:Array(j.noFronds.value).fill(0),xOuter:Array(j.noFronds.value).fill(0),yOuter:Array(j.noFronds.value).fill(0),xMidRandom:Array(j.noFronds.value).fill(0),yMidRandom:Array(j.noFronds.value).fill(0),xOuterRandom:Array(j.noFronds.value).fill(0),yOuterRandom:Array(j.noFronds.value).fill(0)}),q=a({xFlowerTop:242,yFlowerTop:70,xFlowerMid:246,yFlowerMid:100,xFlowerBot:245,yFlowerBot:160}),J=a({xFlowerTop:242,yFlowerTop:70,xFlowerMid:246,yFlowerMid:100,xFlowerBot:245,yFlowerBot:160}),z=a({orange:"125,125 375,125 375,375 125,375",black:"125,125 375,125 375,375 125,375",grey:"125,125 375,125 375,375 125,375",white:"125,125 375,125 375,375 125,375"}),K=o((()=>j.width.value/2)),X=o((()=>j.height.value/2)),Y=o((()=>j.trunkHeight.value/2)),Z=o((()=>j.trunkLeftHeight.value/2)),ee=o((()=>j.trunkRightHeight.value/2)),le=o((()=>K.value-j.trunkSwayMid.value)),ae=o((()=>j.height.value-j.marginBottom.value-Y.value)),oe=o((()=>K.value+parseInt(j.trunkSwayTop.value))),re=o((()=>j.height.value-j.marginBottom.value-j.trunkHeight.value)),ne=o((()=>oe.value+parseInt(j.trunkLeftMid.value))),te=o((()=>j.height.value-j.marginBottom.value-j.trunkHeight.value-Z.value)),ie=o((()=>oe.value+parseInt(j.trunkLeftTop.value))),ue=o((()=>j.height.value-j.marginBottom.value-j.trunkHeight.value-j.trunkLeftHeight.value)),se=o((()=>oe.value+parseInt(j.trunkRightMid.value))),de=o((()=>j.height.value-j.marginBottom.value-j.trunkHeight.value-ee.value)),pe=o((()=>oe.value+parseInt(j.trunkRightTop.value))),ve=o((()=>j.height.value-j.marginBottom.value-j.trunkHeight.value-j.trunkRightHeight.value));o((()=>j.spikeHeight.value/2));const me=o((()=>j.spikeSwayMid.value)),ce=o((()=>-j.spikeHeight.value/2)),he=o((()=>j.spikeSwayTop.value)),ye=o((()=>-j.spikeHeight.value));o((()=>j.spikeSecondHeight.value/2));const ge=o((()=>j.spikeSecondSwayMid.value)),ke=o((()=>-j.spikeSecondHeight.value/2)),we=o((()=>j.spikeSecondSwayTop.value)),fe=o((()=>-j.spikeSecondHeight.value));o((()=>`${250*Math.random()},${250*Math.random()}`)),o((()=>`${250*Math.random()+250},${250*Math.random()}`)),o((()=>`${250*Math.random()},${250*Math.random()+250}`)),o((()=>`${250*Math.random()+250},${250*Math.random()+250}`)),o((()=>`M ${K.value} ${j.height.value-j.marginBottom.value} Q ${le} ${ae} ${oe} ${re}`));const xe=o((()=>({"--trunk":`M ${K.value} ${j.height.value-j.marginBottom.value} Q ${le.value} ${ae.value} ${oe.value} ${re.value}`,"--trunkLeft":`M ${oe.value} ${re.value} Q ${ne.value} ${te.value} ${ie.value} ${ue.value}`,"--trunkRight":`M ${oe.value} ${re.value} Q ${se.value} ${de.value} ${pe.value} ${ve.value}`,"--spike":`M 0 0 Q ${me.value} ${ce.value} ${he.value} ${ye.value}`,"--spike2":`M 0 0 Q ${ge.value} ${ke.value} ${we.value} ${fe.value}`,"--flower":`M ${q.xFlowerBot} ${q.yFlowerBot} Q ${q.xFlowerMid} ${q.yFlowerMid} ${q.xFlowerTop} ${q.yFlowerTop}`,"--flower2":`M ${J.xFlowerBot} ${J.yFlowerBot} Q ${J.xFlowerMid} ${J.yFlowerMid} ${J.xFlowerTop} ${J.yFlowerTop}`,"--strokeWidth":`${j.trunkWidth.value}px`,"--animationName":E.selectedAnim})));function Se(){let e={inner:void 0,mid:void 0,outer:void 0},l={inner:void 0,mid:void 0,outer:void 0};const a=["inner","mid","outer"];a.forEach(((a,o)=>{l[a]=document.getElementById(a);try{e[a]=l[a].getTotalLength()/j.noFronds.value}catch(r){console.warn("elipses are not yet drawn, cannot query for their length")}}));try{Array(j.noFronds.value).fill({}).forEach(((o,r)=>{a.forEach((a=>{const o=l[a].getPointAtLength(r*e[a]);switch(a){case"inner":N.xInner[r]=o.x,N.yInner[r]=o.y;break;case"mid":N.xMid[r]=o.x+N.xMidRandom[r],N.yMid[r]=o.y+N.yMidRandom[r];break;case"outer":N.xOuter[r]=o.x+N.xOuterRandom[r],N.yOuter[r]=o.y+N.yOuterRandom[r]}}))}))}catch(o){console.warn("unable to generate fronds before elipses exist")}}function $e(e,l,a){try{const o=document.getElementById(e),r=o.getTotalLength(),n=o.getPointAtLength(l*r),t=o.getPointAtLength(parseFloat((parseFloat(l)+parseFloat(a))/2)*r),i=o.getPointAtLength(a*r);"spike"===e?(q.xFlowerTop=n.x,q.xFlowerMid=t.x,q.xFlowerBot=i.x,q.yFlowerTop=n.y,q.yFlowerMid=t.y,q.yFlowerBot=i.y):"spike2"===e&&(J.xFlowerTop=n.x,J.xFlowerMid=t.x,J.xFlowerBot=i.x,J.yFlowerTop=n.y,J.yFlowerMid=t.y,J.yFlowerBot=i.y)}catch(o){console.warn("unable to query length of spike before it exists")}}function Fe(e){const l=j.noFronds.value;return parseInt(e)<=parseInt(1*l/8)?"mid":parseInt(e)<=parseInt(3*l/8)?"lower":parseInt(e)<=parseInt(5*l/8)?"mid":parseInt(e)<=parseInt(7*l/8)?"upper":"mid"}function Me(){N.xMidRandom=N.xMidRandom.map((e=>(Math.random()-.5)*parseInt(j.frondRandom.value))),N.yMidRandom=N.yMidRandom.map((e=>(Math.random()-.5)*parseInt(j.frondRandom.value))),N.xOuterRandom=N.xOuterRandom.map((e=>(Math.random()-.5)*parseInt(j.frondRandom.value))),N.yOuterRandom=N.yOuterRandom.map((e=>(Math.random()-.5)*parseInt(j.frondRandom.value))),Se()}return setTimeout((()=>{n((()=>{Me()})),n((()=>{j.noBranches.value,j.frondDroop.value,j.frondSway.value,j.frondLength.value,Se()})),n((()=>{j.spikeSwayMid.value,j.spikeSwayTop.value,j.spikeHeight.value,j.flowerStart.value,j.flowerStop.value,j.spikeVisible.value,$e("spike",j.flowerStart.value,j.flowerStop.value)})),n((()=>{j.spikeSecondSwayMid.value,j.spikeSecondSwayTop.value,j.spikeSecondHeight.value,j.flowerSecondStart.value,j.flowerSecondStop.value,j.spikeSecondVisible.value,$e("spike2",j.flowerSecondStart.value,j.flowerSecondStop.value)}))}),100),S(((e,a)=>(t(),i("div",$,[F,M,u("div",b,[u("div",T,[R,(t(!0),i(s,null,d(p(D),(e=>(t(),i("div",{key:"category"+e},[u("h4",B,y(e),1),(t(!0),i(s,null,d(Object.values(j).filter((l=>l.group===e&&!0===l.display)),(e=>(t(),i("div",{key:e,class:"item"},[u("p",null,[g(y(e.label),1),x.includes(e)?(t(),i("span",I,"*")):v("",!0),m(u("input",{"onUpdate:modelValue":l=>e.value=l,type:"range",min:e.min,max:e.max,step:e.step},null,8,["onUpdate:modelValue","min","max","step"]),[[k,e.value]])])])))),128))])))),128)),u("button",{onClick:Me},"Randomise Fronds"),L]),u("div",H,[C,(t(),i(s,null,d(l,(e=>u("div",{class:"radio",key:e+"color"},[m(u("input",{type:"radio",id:e.value,name:"color",value:e.value,"onUpdate:modelValue":a[1]||(a[1]=e=>E.selectedColor=e)},null,8,["id","value"]),[[w,E.selectedColor]]),u("label",{for:e.value},y(e.name),9,["for"]),O]))),64)),V,(t(),i(s,null,d(h,((e,l)=>u("div",{class:"checkbox",key:e+"color"},[m(u("input",{type:"checkbox",id:e.value,name:"shape",value:e.value,"onUpdate:modelValue":e=>E.selectedShape[l]=e},null,8,["id","value","onUpdate:modelValue"]),[[f,E.selectedShape[l]]]),u("label",{for:e.value},y(e.name),9,["for"]),u("button",{onClick:l=>function(e){const l=parseInt(K.value),a=parseInt(X.value);z[e]=`${Math.random()*l},${Math.random()*a} \n  ${Math.random()*l+l},${Math.random()*a} \n  ${Math.random()*l+l},${Math.random()*a+a} \n  ${Math.random()*l},${Math.random()*a+a}`}(e.value)},"Randomise",8,["onClick"])]))),64))]),u("div",A,[(t(),i("svg",{class:E.selectedColor,xmlns:"http://www.w3.org/2000/svg",width:`${j.width.value}px`,height:`${j.height.value}px`,viewbox:"0 0 200px 200px"},[U,u("g",null,[(t(),i(s,null,d(h,((e,l)=>u("g",{class:"shape",key:"g-shape"+e},[!0===E.selectedShape[l]?(t(),i("polygon",{key:0,class:`${e.value}`,points:z[e.value]},null,10,["points"])):v("",!0)]))),64))]),u("g",null,[u("path",{class:["trunk",E.selectedColor],style:p(xe),d:p(xe)["--trunk"]},null,14,["d"]),"2"==j.noBranches.value?(t(),i("path",{key:0,class:["trunk",E.selectedColor],style:p(xe),d:p(xe)["--trunkLeft"]},null,14,["d"])):v("",!0),"2"==j.noBranches.value?(t(),i("path",{key:1,class:["trunk",E.selectedColor],style:p(xe),d:p(xe)["--trunkRight"]},null,14,["d"])):v("",!0)]),u("g",{transform:p(_)},[m(u("g",null,[u("path",{id:"spike",class:E.selectedColor,d:p(xe)["--spike"]},null,10,["d"]),"1"==j.flowerVisible.value?(t(),i("path",{key:0,class:["flower",E.selectedColor],d:p(xe)["--flower"]},null,10,["d"])):v("",!0)],512),[[c,"1"==j.spikeVisible.value]]),u("g",null,[(t(!0),i(s,null,d(N.xInner,((e,l)=>(t(),i("path",{key:"point"+l,class:["fronds",Fe(l),E.selectedColor],d:`M ${N.xInner[l]} ${N.yInner[l]}\n              Q ${N.xMid[l]} ${N.yMid[l]}\n              ${N.xOuter[l]} ${N.yOuter[l]}`},null,10,["d"])))),128))]),u("ellipse",{id:"inner",class:"ellipse inner",style:`{stroke: ${1===j.showGuideCircles.value?"1px red":"0"}}`,cx:"0",cy:"0",rx:"1",ry:"1"},null,4),u("ellipse",{id:"mid",class:"ellipse mid",cx:"0",cy:"0",rx:j.frondLength.value/2,ry:j.frondLength.value/2},null,8,["rx","ry"]),u("ellipse",{id:"outer",class:"ellipse outer",cx:parseInt(j.frondSway.value),cy:parseInt(j.frondDroop.value),rx:j.frondLength.value,ry:j.frondLength.value},null,8,["cx","cy","rx","ry"])],8,["transform"]),"2"==j.noBranches.value?(t(),i("g",{key:0,transform:p(P)},[m(u("g",null,[u("path",{id:"spike2",class:E.selectedColor,d:p(xe)["--spike2"]},null,10,["d"]),"1"==j.flowerSecondVisible.value?(t(),i("path",{key:0,class:["flower",E.selectedColor],d:p(xe)["--flower2"]},null,10,["d"])):v("",!0)],512),[[c,"1"==j.spikeSecondVisible.value]]),u("g",null,[(t(!0),i(s,null,d(N.xInner,((e,l)=>(t(),i("path",{key:"point"+l,class:["fronds",Fe(l),E.selectedColor],d:`M ${N.xInner[l]} ${N.yInner[l]}\n              Q ${N.xMid[l]} ${N.yMid[l]}\n              ${N.xOuter[l]} ${N.yOuter[l]}`},null,10,["d"])))),128))]),u("ellipse",{id:"inner2",class:"ellipse inner",style:`{stroke: ${1===j.showGuideCircles.value?"1px red":"0"}}`,cx:"0",cy:"0",rx:"1",ry:"1"},null,4),G,u("ellipse",{id:"outer2",class:"ellipse outer",cx:parseInt(j.frondSway.value),cy:parseInt(j.frondDroop.value),rx:"100",ry:"100"},null,8,["cx","cy"])],8,["transform"])):v("",!0)],10,["width","height"]))])]),Q]))))},__scopeId:"data-v-06869a54"};x({expose:[],setup:e=>(e,l)=>(t(),i(E))}).mount("#app");
